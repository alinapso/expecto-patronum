// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String         @id @default(uuid())
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  email        String         @unique
  hash         String
  firstName    String?
  lastName     String?
  Address      String?
  role         Role?
  Sponsored    Sponsored[]
  Transactions Transactions[]

  @@map("users")
}

enum Role {
  PATRON
  ADMIN
}

model Sponsored {
  id               String            @id @default(uuid())
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  firstName        String
  middleName       String
  fatherName       String
  lastName         String
  birthDate        DateTime
  placeOfBirth     String
  description      String
  uploadedFileId   String?
  profilePic       UploadedFile?     @relation(fields: [uploadedFileId], references: [id])
  isActive         Boolean
  patron           User?             @relation(fields: [patronId], references: [id])
  patronId         String?
  monthlyDum       Float?
  startDate        DateTime?
  endDate          DateTime?
  dayOfTransaction Int?
  SponsoredEvents  SponsoredEvents[]

}

model UploadedFile {
  id                String           @id
  title             String
  postfix           String
  fileCategory      FileCategory
  SponsoredEvents   SponsoredEvents? @relation(fields: [sponsoredEventsId], references: [id])
  sponsoredEventsId String?
  Sponsored         Sponsored[]
}

enum FileCategory {
  PROFILE
  IMAGE
  DOC
}

model SponsoredEvents {
  id          String         @id @default(uuid())
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  eventDate   DateTime
  title       String
  description String
  files       UploadedFile[]
  sponsored   Sponsored      @relation(fields: [sponsoredId], references: [id])
  sponsoredId String
}

model Transactions {
  id        String   @id @default(uuid())
  sum       Float
  patron    User     @relation(fields: [patronId], references: [id])
  patronId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
